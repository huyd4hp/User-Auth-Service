services:
  mongo-primary:
    image: mongo:5
    container_name: AuthDB-Master
    restart: always
    hostname: ${MONGO_HOST_PRIMARY}
    ports:
      - "8000:27017"
    volumes:
      - ./database/mongodb/master:/data/db
    command: mongod --replSet rs0 --bind_ip_all
    networks:
      - AuthNetwork

  mongo-slave-1:
    image: mongo:5
    container_name: AuthDB-Slave-1
    restart: always
    hostname: ${MONGO_HOST_SLAVE_1}
    volumes:
      - ./database/mongodb/slave-1:/data/db
    command: mongod --replSet rs0 --bind_ip_all
    networks:
      - AuthNetwork

  mongo-slave-2:
    image: mongo:5
    container_name: AuthDB-Slave-2
    restart: always
    hostname: ${MONGO_HOST_SLAVE_2}
    volumes:
      - ./database/mongodb/slave-2:/data/db
    command: mongod --replSet rs0 --bind_ip_all
    networks:
      - AuthNetwork

  redis-stack:
    image: redis
    container_name: RedisSession
    restart: always
    hostname: ${REDIS_HOST}
    volumes:
      - ./database/redis-stack:/data
    networks:
      - AuthNetwork

  minio:
    image: minio/minio:latest
    container_name: Minio-UserAvatar
    restart: always
    hostname: ${MINIO_HOST}
    volumes:
      - ./minio:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    networks:
      - AuthNetwork
    command: server --console-address ":9001" /data

networks:
  AuthNetwork:
    external: true
    driver: bridge
